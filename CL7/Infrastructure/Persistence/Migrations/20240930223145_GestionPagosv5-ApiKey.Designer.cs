// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240930223145_GestionPagosv5-ApiKey")]
    partial class GestionPagosv5ApiKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.ApiKeys.ApiKey", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("app")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaExpiracion")
                        .HasColumnType("datetime2");

                    b.Property<string>("key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("app")
                        .IsUnique();

                    b.HasIndex("id");

                    b.ToTable("ApiKey", "sch_gespago");
                });

            modelBuilder.Entity("Domain.Auditorias.Auditoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("accion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("appCreador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("documentoPagoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<string>("hostCreador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("usuarioCreadorId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("documentoPagoId");

                    b.HasIndex("id");

                    b.ToTable("Auditoria", "sch_gespago");
                });

            modelBuilder.Entity("Domain.DocumentosPagos.DocumentoPago", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("pagoMasivoId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id");

                    b.ToTable("DocumentoPago", "sch_gespago");
                });

            modelBuilder.Entity("Domain.DocumentosPagosDetalle.DocumentoPagoDetalle", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("documentoPagoId")
                        .HasColumnType("int");

                    b.Property<decimal>("monto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("pagoMasivoDetalleId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("documentoPagoId");

                    b.HasIndex("id");

                    b.ToTable("DocumentoPagoDetalle", "sch_gespago");
                });

            modelBuilder.Entity("Domain.ModalidadesPagos.ModalidadPago", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("formato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("plataformaId")
                        .HasColumnType("int");

                    b.Property<string>("ruta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("version")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id");

                    b.HasIndex("plataformaId");

                    b.ToTable("ModalidadPago", "sch_gespago");
                });

            modelBuilder.Entity("Domain.Plataformas.Plataforma", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("entidadBancariaId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Plataforma", "sch_gespago");
                });

            modelBuilder.Entity("Domain.Auditorias.Auditoria", b =>
                {
                    b.HasOne("Domain.DocumentosPagos.DocumentoPago", "documentoPago")
                        .WithMany()
                        .HasForeignKey("documentoPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("documentoPago");
                });

            modelBuilder.Entity("Domain.DocumentosPagosDetalle.DocumentoPagoDetalle", b =>
                {
                    b.HasOne("Domain.DocumentosPagos.DocumentoPago", "documentoPago")
                        .WithMany()
                        .HasForeignKey("documentoPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("documentoPago");
                });

            modelBuilder.Entity("Domain.ModalidadesPagos.ModalidadPago", b =>
                {
                    b.HasOne("Domain.Plataformas.Plataforma", "plataforma")
                        .WithMany()
                        .HasForeignKey("plataformaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("plataforma");
                });
#pragma warning restore 612, 618
        }
    }
}
